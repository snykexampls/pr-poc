name: Test

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Install
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Test
        if: success()
        run: |
          npm run test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Install
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Test
        if: success()
        run: |
          npm run eslint

  stylelint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Install
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Test
        if: success()
        run: |
          npm run stylelint

  build-storybook-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Install
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Test
        if: success()
        run: |
          npm run build-storybook

  storybook-jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Install
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Test
        if: success()
        run: |
          npm run test:stories
